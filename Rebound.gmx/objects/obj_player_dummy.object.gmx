<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_dummy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instantiate our hero!
grav_force = .5;
default_horizontal_speed = 5;
horizontal_speed = 5;
default_vertical_speed = 0;
vertical_speed = 0;
horizontal_Modifier = 0;
vertical_Modifier = 0;
jump_speed = 12;
pressure = 0;
pressure_level = 0;
attacking = false;
attack_number = 0;
direction_facing = 0;

//Horizontal modifiers by pressure
horizontal_Pressure_Modifiers = ds_list_create();
ds_list_add(horizontal_Pressure_Modifiers, 0);
ds_list_add(horizontal_Pressure_Modifiers, 0);
ds_list_add(horizontal_Pressure_Modifiers, 0);
ds_list_add(horizontal_Pressure_Modifiers, .48);
ds_list_add(horizontal_Pressure_Modifiers, .64);
ds_list_add(horizontal_Pressure_Modifiers, .80);

//Vertical modifiers by pressure
vertical_Pressure_Modifiers = ds_list_create();
ds_list_add(vertical_Pressure_Modifiers, 0);
ds_list_add(vertical_Pressure_Modifiers, .16);
ds_list_add(vertical_Pressure_Modifiers, .32);
ds_list_add(vertical_Pressure_Modifiers, .48);
ds_list_add(vertical_Pressure_Modifiers, .64);
ds_list_add(vertical_Pressure_Modifiers, .80);
/*
Double jumps not used
jumpsUsed = 0;
maxJumps = 2;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset the number of attacks
attack_number = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check and update Sarah each frame
scr_GetFaceButtonInput();
scr_AlterPressureDebug();
scr_UpdateMovement(horizontal_speed, vertical_speed, jump_speed, grav_force, horizontal_Modifier, vertical_Modifier);

if(k_shoot_pressed &amp;&amp; attack_number != 3)
{
    if(attacking == false)
    {
        attacking=true;
    }
    
    if(attack_number &lt; 3)
    {
        attack_number++;
        alarm[0] = 60;
    with instance_create(x, y, obj_player_dummy_melee)
    {
        image_xscale = obj_player_dummy.image_xscale;
        image_angle = obj_player_dummy.direction_facing;
    }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_dummy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision: Don't let Sarah through!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw our hero based on pressure!
if(pressure_level == 1)
{
draw_sprite(spr_player_pressure1, 0, x, y);
}
else if(pressure_level == 2)
{
draw_sprite(spr_player_pressure2, 0, x, y);
}
else if(pressure_level == 3)
{
draw_sprite(spr_player_pressure3, 0, x, y);
}
else if(pressure_level == 4)
{
draw_sprite(spr_player_pressure4, 0, x, y);
}
else if(pressure_level == 5)
{
draw_sprite(spr_player_pressure5, 0, x, y);
}
else
{
draw_sprite(spr_player_dummy, 0, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
