<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize statistics to be displayed
pressure = 0;
pressure_level = 0;

actual_x = 0;
actual_y = 0;

distance_x = 0;
distance_y = 0;

true_analog_direction = 0;

vertical_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collect variables to display
if(instance_exists(obj_player_dummy))
{
pressure = obj_player_dummy.pressure;
pressure_level = obj_player_dummy.pressure_level;
vertical_speed = obj_player_dummy.vertical_speed;
}
else
{
pressure = 0;
pressure_level = 0;
vertical_speed = 0;
}

if(instance_exists(obj_GlobalJoystick))
{
actual_x = obj_GlobalJoystick.actual_x;
actual_y = obj_GlobalJoystick.actual_y;

distance_x = obj_GlobalJoystick.distance_x;
distance_y = obj_GlobalJoystick.distance_y;

true_analog_direction = obj_GlobalJoystick.true_analog_direction;
}
else
{
actual_x = 0;
actual_y = 0;

distance_x = 0;
distance_y = 0;

true_analog_direction = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Drawing!
draw_set_colour(c_black);
draw_set_font(-1);
draw_text(window_get_width()/2, window_get_height()/2, "Pressure Level: " + string(pressure_level) + "#Pressure: " + string(pressure) + "#Vertical Speed: " + string(vertical_speed));
draw_text(window_get_width()/2, (window_get_height()+150)/2, "actual_x: " + string(actual_x) + "#actual_y: " + string(actual_y) + "#distance_x: " + string(distance_x)+ "#distance_y: " + string(distance_y) + "#true_analog_direction: " + string(true_analog_direction));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
