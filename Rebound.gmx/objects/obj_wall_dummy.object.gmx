<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall_dummy</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instantiate the wall!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw a different color upon impact from a jump to determine jump distances
///Draw our hero based on pressure!

if(obj_player_dummy.pressure_level == 1 &amp;&amp; place_meeting(x, y-1, obj_player_dummy))
{
colour = c_aqua;
draw_sprite_ext(spr_wall_dummy,-1,x,y,image_xscale,image_yscale,image_angle,colour,image_alpha)
}
else if(obj_player_dummy.pressure_level == 2 &amp;&amp; place_meeting(x, y-1, obj_player_dummy))
{
colour = c_green;
draw_sprite_ext(spr_wall_dummy,-1,x,y,image_xscale,image_yscale,image_angle,colour,image_alpha)
}
else if(obj_player_dummy.pressure_level == 3 &amp;&amp; place_meeting(x, y-1, obj_player_dummy))
{
colour = c_yellow;
draw_sprite_ext(spr_wall_dummy,-1,x,y,image_xscale,image_yscale,image_angle,colour,image_alpha)
}
else if(obj_player_dummy.pressure_level == 4 &amp;&amp; place_meeting(x, y-1, obj_player_dummy))
{
colour = c_red;
draw_sprite_ext(spr_wall_dummy,-1,x,y,image_xscale,image_yscale,image_angle,colour,image_alpha)
}
else if(obj_player_dummy.pressure_level == 5 &amp;&amp; place_meeting(x, y-1, obj_player_dummy))
{
colour = c_fuchsia;
draw_sprite_ext(spr_wall_dummy,-1,x,y,image_xscale,image_yscale,image_angle,colour,image_alpha)
}
else
{
colour = c_gray;
draw_sprite_ext(spr_wall_dummy,-1,x,y,image_xscale,image_yscale,image_angle,colour,image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
